# simple state space AR1 model for turtle nesting 
# original code from Lab 7, Introduction to Bayesian Time-Series
# analysis using Jags. Univ Washington: 
# https://www.scribd.com/document/373707632/Lab-7-Fitting-models-with-JAGS-pdf

# Also can be found here:
# https://nwfsc-timeseries.github.io/atsa-labs/sec-jags-uss.html
#
# For this model, the natural log of raw counts were used as data (y). The state model
# is normal and the observation model is norm. The probability of nesting in a month
# is modeled with a discrete Fourier series - p[month] sums to 1.0 over each 12 month period.
# To normalize the monthly probability (i.e., they have to sum to 1.0 over 12 months), each
# monthly value has to be divided by the sum.  Constant parts (sum(cos(2*pi*m/P)) and sum(sin(2*pi*m/P),
# where sum is over all m (months) and P is period (6 months for Wermon and 12 months for JM)),
# need to be supplied as data as C_cos and C_sin. Also, C0 is a constant to make all Fourier 
# series values to be > 0.  I think C0 >= 2 should do... (not really... 10 did the trick)
#
# I used quite informative prior for X[1] ~ dnorm(5, 0.1) although variance of 10 should 
# be wide enough in the log scale.  I used similar priors for the slopes: dnorm(0, 0.1).
# For all standard deviations (process and observation), I used uniform between 0 and 20, 
# which should be wide enough in the log scale. 
#
# I didn't see any reason to make the priors flatter because that would make convergence difficult
# and did not gain anything in return. 

model{
    # incomplete at the moment - 2019-04-10
    for(i in 1:n.states) {
        U[i] ~ dnorm(u_mean,1/(u_sd^2))
            
        N0[i] ~ dnorm(x0_mean[i], 1/(x0_sd[i]^2))    # prior on init state
        predN[i,1] <- N0[i] + U[i]  
        N[i,1] <- predN[i,1]
    }
   
    tauQ ~ dgamma(q_alpha,q_beta)
    Q <- 1/tauQ                       

    for(j in 1:n.timeseries) {
      
        tauR[j] ~ dgamma(r_alpha,r_beta)
        R[j] <- 1/tauR[j]  # Note: R is variance
      
        predY[j,1] <- inprod(Z[j,1:n.states], X[,1])    
        Y[j,1] ~  dnorm(predY[j,1], tauR[j])
        loglik[j,1] <- logdensity.norm(Y[j,1], predY[j,1], tauR[j])
    }


    for (s in 2:n.years){
        N[s] ~ dnorm(pred.N[s], tau.N)
        pred.N[s] <- theta + N[s-1]

        for (t in 1:n.months){
            predX[s,t] <- log(p[m[s,t]]) + N[s]
            X[s,t] ~ dnorm(predX[s,t], tau.pro)

            # observation
            y[s,t] ~ dnorm(X[s,t], tau.obs)
        
            loglik[s, t] <- logdensity.norm(y[s,t], X[s,t], tau.obs)
        }
    }
	
    # n.months = 12 when entire year is modeled. 
    # n.months = 6 when one season is modeled (Wermon only)
    for (k in 1:n.months){
        p.const[k] <-  2 * pi * k / period
        p[k] <- (C0 + p.beta.cos * cos(p.const[k]) + p.beta.sin * sin(p.const[k]))/(n.months * C0 + p.beta.cos * C_cos + p.beta.sin * C_sin)
    }

    N[1] <- mu
    
    for (t in 1:n.months){
        predX[1,t] <- p[m[1,t]] * N[1]
        X[1,t] ~ dnorm(predX[1,t], tau.pro)

        # observation
        y[1,t] ~ dnorm(X[1,t], tau.obs)
        
        loglik[1, t] <- logdensity.norm(y[1,t], X[1,t], tau.obs)
    }
    
    #pi <- 3.14159

    sigma.pro ~ dgamma(2, 0.5)
    tau.pro <- 1/(sigma.pro * sigma.pro)

    sigma.obs ~ dgamma(2, 0.5)
    tau.obs <- 1/(sigma.obs * sigma.obs)

    sigma.N ~ dgamma(2, 0.5)
    tau.N <- 1/(sigma.N * sigma.N)

    theta ~ dnorm(0, 0.1)

    p.beta.cos ~ dnorm(0, 1)
    p.beta.sin ~ dnorm(0, 1)

    mu ~ dnorm(5, 0.1) 
    
}
