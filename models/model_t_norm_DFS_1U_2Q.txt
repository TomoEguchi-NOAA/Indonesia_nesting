# JAGS model for imputing missing nest counts at Indonesia nesting beaches

# This model also estimate the annual population growth rate, which is shared
# by the two beaches. The observed cyclical nature of nesting at two beaches
# are modeled by the discrete Fourier series, where Jamursba-Medi has one period
# and Wermon has two periods within each nesting season (April to March). 

# In order to make the analysis comparable to the previous analysis, where data
# for 2001-2005 and 2013-2015 in Wermon removed, those years for the imputed 
# Wermon data are skipped in the population growth rate estimation. In the 
# imputation process, however, the growth rate is included... 



model{
    # Initial states
    for(j in 1:n.timeseries) {            
       predX0[j] ~ dnorm(5, 0.1)
       predX[1,j] <- c[j, m[1]] + predX0[j] + U/12
       X[1,j] ~ dnorm(predX[1,j], tau.X[j])

       # observation
       y[1,j] ~  dt(X[1,j], tau.y[j], df)
                
       loglik[1,j] <- logdensity.norm(y[1,j], X[1,j], tau.y[j])

       for (t in 2:n.steps){
           predX[t,j] <-  c[j,m[t]] + X[t-1, j] + U/12
           X[t,j] ~ dnorm(predX[t,j], tau.X[j])

           # observation
           y[t,j] ~  dnorm(X[t,j], tau.y[j])
                
           loglik[t,j] <- logdensity.norm(y[t,j], X[t,j], tau.y[j])
        }
       
        #N[1, j] <- log(sum(tmp2[y,,j]
        for (y in 1:n.years){           
	   for (mm in 1:12){
	      tmp2[y, mm, j] <- exp(X[(y*12 - mm + 1), j])
           }

           N[y, j] <- log(sum(tmp2[y,,j]))
        }
    }
    
    N.JM[1] <- N[idx.JM[1], 1]
    for (y in 2:n.keep.JM){
        #N.JM[y] <- N.JM[y-1] + U * dt.JM[y-1]
        N.JM[y] ~ dnorm(N.JM[y-1] + U * dt.JM[y-1], 1/(sigma.N * sigma.N))
    }   
    
    N.W[1] <- N[idx.W[1], 2]
    for (y in 2:n.keep.W){
        #N.W[y] <- N.W[y-1] + U * dt.W[y-1]
        N.W[y] ~  dnorm(N.W[y-1] + U * dt.W[y-1], 1/(sigma.N * sigma.N))
    }   

    U ~ dnorm(0, 1)
    #U[2] ~ dnorm(0, 0.1) 
    sigma.N ~ dgamma(2, 0.5)

    # n.months = 12 when entire year is modeled. 
    # n.months = 6 when one season is modeled (Wermon only)
    for (j in 1:n.timeseries){
        for (k in 1:n.months){
            c.const[j, k] <-  2 * pi * k / period[j]
            c[j, k] <- beta.cos[j] * cos(c.const[j,k]) + beta.sin[j] * sin(c.const[j,k])
        }

        sigma.y[j] ~ dgamma(2, 0.5)
        tau.y[j] <- 1/(sigma.y[j] * sigma.y[j])
        beta.cos[j] ~ dnorm(0, 1)
        beta.sin[j] ~ dnorm(0, 1)

        # sigma.X is the SD of the process (X)
        sigma.X[j] ~ dgamma(2, 0.5)
        tau.X[j] <- 1/(sigma.X[j] * sigma.X[j])    
    }

}
